@model GivskudDashboard.ViewModels.OverviewViewModel
@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<hr/>

<div class="row">
	<div class="col-md-6">
		@Html.Partial("_Map")
	</div>
	<div class="col-md-6">
		<h3>Please click on one of the markers to view details</h3>
		<p>By doing so, you will be shown the details for the marker you have clicked on</p>
		<hr />
		<h4>Marker Details</h4>
		<br />
		<p>@Model.ActiveMarker.Title</p>
		<br />
		<p>@Model.Types[Model.ActiveMarker.MarkerTypeID - 1].Name</p>
		<br />
		<p>@Model.ActiveMarker.Description.Title</p>
		<br />
		<p>@Model.ActiveMarker.Description.Location</p>
		<br />
		<p>Feeding time @Model.ActiveMarker.Description.FeedingTime.ToString()</p>
	</div>
	<div class="col-md-12">
		<p>@Html.Raw(Model.ActiveMarker.Description.Body)</p>
		<br />
		<a class="btn btn-default" asp-controller="Markers" asp-action="Edit" asp-route-id="@Model.ActiveMarker.ID">Edit Marker</a>
	</div>
	
</div>

<script>
	var markers = @Json.Serialize(Model.Markers);
	var activeMarkerID = @Json.Serialize(Model.ActiveMarker.ID);
	var coordinates = {
		lat: @Json.Serialize(Model.Lat),
		lng: @Json.Serialize(Model.Lng)
	}

	map.setCenter(new google.maps.LatLng(coordinates.lat, coordinates.lng));

	for (var i = 0, n = markers.length; i < n; i++) {
		console.log(markers[i])
		marker = new google.maps.Marker({
			position: new google.maps.LatLng(markers[i].lat, markers[i].lng),
			markerID: markers[i].id
		});

		if (marker.markerID === activeMarkerID) {
			marker.setAnimation(google.maps.Animation.BOUNCE);
		}

		marker.setMap(map);	
		marker.addListener("click", function () {
			window.location = "/Overview/details/" + this.markerID + "?lat=" + this.position.lat() + "&lng=" + this.position.lng();
		});
	}
</script>